.TH grml-bridge 8
.SH "NAME"
grml-bridge \- set up your box as bridge
.SH SYNOPSIS
.B grml-bridge
.RI " start|stop|restart|info "
.SH DESCRIPTION
This manual page documents briefly the
.B grml-bridge
command.
.SH USAGE
Configure setup via configuration file /etc/grml/routersetup.
To specify which DEVICES should be bridged, use BRIDGE_DEVICES, e.g.

  BRIDGE_DEVICES="eth0 eth1"

would bridge device eth0 and eth1. 
Note: The auto interface name is not allowed here!

To specify the name of the bridge, use BRIDGE_NAME, e.g.

  BRIDGE_NAME="br0"

Note: this entry is optional, per default the name br0 is choosen.

If you want do disable Spanning Tree Protocol (STP) on your bridge, just set BRIDGE_STP to no, e.g.

  BRIDGE_STP="no"

Per default stp is on.

Example Configuration file:

  ,----[ /etc/grml/routersetup ]
  | # Bridges eth0 and ath0 together
  | BRIDGE_DEVICES="eth0 ath0"
  |
  | # Bridge name is grml-bridge
  | BRIDGE_NAME="grml-bridge"
  |
  | # Disable stp
  | BRIDGE_STP="no"
  `----

Start the bridge:

  ,----
  | # grml-bridge start
  `----

Now, your bridging device is up and running. Now you have to set the ip address of
your bridged devices to 0.0.0.0. You can do this with following command:

  ,----
  | source /etc/grml/routersetup
  | for i in $BRIDGED_DEVICES ; do ifconfig $i 0.0.0.0 ; done
  `----

Now your bridge is working. If you want that your bridge is reachable, please
give your bridge an ip adress. You can do this for example with

  ,----
  | ifconfig grml-bridge 192.168.0.1
  `----

Stop the bridge:

  ,----
  | # grml-bridge stop
  `----

Note, your devices do not have an ip address, so you have to give them an ip address. You can do this with

  ,----
  | ifconfig eth1 $IP_ADDR
  `----

.SH SEE ALSO
.BR grml-ap (8),
.BR grml-router (8).
.SH AUTHOR
grml-bridge was written by Ulrich Dangel <schula@grml.org> and Michael Prokop <mika@grml.org>.
.PP
This manual page was written by Michael Prokop
<mika@grml.org> for the Debian project (but may be used by others).
